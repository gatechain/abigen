import ContractAbstract from "hipo-contract/dist/contract/ContractAbstract.js";
import {{contractName}}Abi from '../abis/{{contractName}}.json'

type BigNumber = any 
interface IOption {
	gasLimit?: Number
	from?: string 
	value?: string 
} 

export class {{contractName}}Contract extends ContractAbstract {
    public static contractName = '{{contractName}}Contract';
		Abi = {{contractName}}Abi 
		constructor(props: any) {
			super(props)
		}
		{{#each methods}}
		{{#ifEquals languageSpecificName "name"}}
		{{else}}
		{{#ifEquals this.stateMutability "view" }}
	  public {{languageSpecificName}}({{> typed_params inputs=this.inputs}}
			const provider = this.getContractProvider(this.address)
			return provider.{{languageSpecificName}}({{> params inputs=this.inputs}}
		{{else}}
	  public async {{languageSpecificName}}({{> typed_params_signer inputs=this.inputs}}
			const signer = this.getContractSigner(this.address)
			const gasLimit = await signer.estimateGas.{{languageSpecificName}}({{#each inputs}}{{name}},{{/each}}opt)

			const options = Object.assign({
				gasLimit
			}, opt)
			return signer.{{languageSpecificName}}({{> params_signer inputs=this.inputs}}
		{{/ifEquals}}
		};
		{{/ifEquals}}
		{{/each}}
}

